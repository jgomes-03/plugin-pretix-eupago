name: Build & Publish (PyPI / TestPyPI)

on:
  push:
    branches: [ main ]           # ensaio: TestPyPI
    tags:    [ 'v*.*.*' ]        # release: PyPI
  workflow_dispatch:

jobs:
  build:
    name: Build package
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: Install build tools
        run: |
          python -m pip install --upgrade pip
          pip install build twine tomli

      # (Opcional) garantir que a versão do pyproject.toml coincide com a tag vX.Y.Z
      - name: Verify version matches tag (only on tags)
        if: startsWith(github.ref, 'refs/tags/')
        run: |
          TAG="${GITHUB_REF#refs/tags/v}"
          PYV=$(python - << 'PY'
import tomli, pathlib
data = tomli.loads(pathlib.Path("pyproject.toml").read_text())
print(data.get("project", {}).get("version", ""))
PY
)
          echo "pyproject version: $PYV, tag: $TAG"
          [ "$PYV" = "$TAG" ] || { echo "Version mismatch"; exit 1; }

      - name: Build sdist & wheel
        run: python -m build

      - name: Twine check
        run: twine check dist/*

      - name: Upload build artifact
        uses: actions/upload-artifact@v4
        with:
          name: dist
          path: dist/*

  publish-testpypi:
    name: Publish to TestPyPI
    needs: build
    if: startsWith(github.ref, 'refs/heads/')   # só em pushes para branches (ex.: main)
    runs-on: ubuntu-latest
    steps:
      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: dist
          path: dist

      - name: Publish (TestPyPI)
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          repository-url: https://test.pypi.org/legacy/

  publish-pypi:
    name: Publish to PyPI
    needs: build
    if: startsWith(github.ref, 'refs/tags/v')   # só em tags vX.Y.Z
    runs-on: ubuntu-latest
    steps:
      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: dist
          path: dist

      - name: Publish (PyPI)
        uses: pypa/gh-action-pypi-publish@release/v1
